parameters:
  - name: SERVICE_NAME

stages:
- stage: DeployStage
  condition: succeeded()
  # dependsOn: DeployDev
  jobs:
  - job: DeployStageJob
    steps:

    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true
      #clean: true
  
    # Every time the pipeline performs a "checkout" step it will checkout the same commit, so we need this step to pull for the changes commited in the previous stage   
    - script: |
        git pull origin main
      displayName: Update repo
      
    - script: |
        sed 's/tag:.*/tag: $(Build.BuildId)/g' helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-stage.yaml > helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-stage.temp
        mv helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-stage.temp helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-stage.yaml
      displayName: Update Tag In values-stage.yaml

    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-stage.yaml 
        git commit -m "App version tag updated to $(Build.BuildId) by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'