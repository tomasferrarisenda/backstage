parameters:
  - name: SERVICE_NAME

stages:
- stage: DeployDev
  condition: succeeded()
  jobs:
  - job: DeployDevJob
    steps:

    # In this case it's necessary to specify the checkout with the persistCredential options set to true. This will enable us to push the changes to the repo.
    - checkout: self
      persistCredentials: true

    # We update the local repo with a pull just in case there have been any recent modifications
    - script: |
        git pull origin main
      displayName: Update repo

    - script: |
        sed 's/tag:.*/tag: $(Build.BuildId)/g' helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-dev.yaml > helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-dev.temp
        mv helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-dev.temp helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-dev.yaml
      displayName: Update Tag In values-dev.yaml

    - script: |
        git config --global user.email "AzureDevOps@Build&DeployAppPipeline.com"
        git config --global user.name "Azure DevOps - Build & Deploy App Pipeline"
        git checkout -b main
        git add helm/my-app/${{ parameters.SERVICE_NAME }}/environments/values-dev.yaml 
        git commit -m "App version tag updated to $(Build.BuildId) by Azure DevOps"
        git push --set-upstream origin main
      displayName: 'Push changes to GitHub'