app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  title: Automate All The Things
  baseUrl: http://localhost:7007

organization:
  name: Automate All The Things

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

catalog:
  # import:
  #   entityFilename: catalog-info.yaml
  #   pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]

  locations:
    - type: url
      target: https://github.com/tomasferrarisenda/backstage/blob/main/templates/test-docs-template-url/template.yaml
      rules:
        - allow: [Template]
        
    - type: file
      target: ../../../templates/test-docs-template-file/template.yaml
      rules:
        - allow: [Template]

    - type: url
      target: https://github.com/tomasferrarisenda/backstage/blob/main/templates/eks-cluster-template/template.yaml
      rules:
        - allow: [Template]

    - type: url
      target: https://github.com/tomasferrarisenda/backstage/blob/main/templates/new-folder-template/template.yaml
      rules:
        - allow: [Template]


# CUSTOM
kubernetes:
 serviceLocatorMethod:
   type: 'multiTenant'
 clusterLocatorMethods:
   - type: 'config'
     clusters:
       - url: kubernetes.default.svc.cluster.local:443
         name: local
         authProvider: 'serviceAccount'
         skipTLSVerify: false
         skipMetricsLookup: true